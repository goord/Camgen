# Makefile.in generated by automake 1.14.1 from Makefile.am.
# test/Makefile.  Generated from Makefile.in by configure.

# Copyright (C) 1994-2013 Free Software Foundation, Inc.

# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.



am__is_gnu_make = test -n '$(MAKEFILE_LIST)' && test -n '$(MAKELEVEL)'
am__make_running_with_option = \
  case $${target_option-} in \
      ?) ;; \
      *) echo "am__make_running_with_option: internal error: invalid" \
              "target option '$${target_option-}' specified" >&2; \
         exit 1;; \
  esac; \
  has_opt=no; \
  sane_makeflags=$$MAKEFLAGS; \
  if $(am__is_gnu_make); then \
    sane_makeflags=$$MFLAGS; \
  else \
    case $$MAKEFLAGS in \
      *\\[\ \	]*) \
        bs=\\; \
        sane_makeflags=`printf '%s\n' "$$MAKEFLAGS" \
          | sed "s/$$bs$$bs[$$bs $$bs	]*//g"`;; \
    esac; \
  fi; \
  skip_next=no; \
  strip_trailopt () \
  { \
    flg=`printf '%s\n' "$$flg" | sed "s/$$1.*$$//"`; \
  }; \
  for flg in $$sane_makeflags; do \
    test $$skip_next = yes && { skip_next=no; continue; }; \
    case $$flg in \
      *=*|--*) continue;; \
        -*I) strip_trailopt 'I'; skip_next=yes;; \
      -*I?*) strip_trailopt 'I';; \
        -*O) strip_trailopt 'O'; skip_next=yes;; \
      -*O?*) strip_trailopt 'O';; \
        -*l) strip_trailopt 'l'; skip_next=yes;; \
      -*l?*) strip_trailopt 'l';; \
      -[dEDm]) skip_next=yes;; \
      -[JT]) skip_next=yes;; \
    esac; \
    case $$flg in \
      *$$target_option*) has_opt=yes; break;; \
    esac; \
  done; \
  test $$has_opt = yes
am__make_dryrun = (target_option=n; $(am__make_running_with_option))
am__make_keepgoing = (target_option=k; $(am__make_running_with_option))
pkgdatadir = $(datadir)/camgen
pkgincludedir = $(includedir)/camgen
pkglibdir = $(libdir)/camgen
pkglibexecdir = $(libexecdir)/camgen
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = i386-apple-darwin13.1.0
host_triplet = i386-apple-darwin13.1.0
check_PROGRAMS = bitstring_test$(EXEEXT) phi3_graphs_test$(EXEEXT) \
	phi34_graphs_test$(EXEEXT) QCD_procs_test$(EXEEXT) \
	Pauli_basis_test$(EXEEXT) Weyl_basis_test$(EXEEXT) \
	Pauli_spinor_test$(EXEEXT) Weyl_spinor_test$(EXEEXT) \
	m_spinor_test$(EXEEXT) discr_cols_test$(EXEEXT) \
	cont_cols_test$(EXEEXT) QEDch_test$(EXEEXT) \
	QEDdh_test$(EXEEXT) QCDcc_test$(EXEEXT) QCDdc_test$(EXEEXT) \
	Parke_Taylor_cc_test$(EXEEXT) Parke_Taylor_dc_test$(EXEEXT) \
	SM_test$(EXEEXT) SM_params_test$(EXEEXT) \
	susy_QED_test$(EXEEXT) susy_QCDcc_test$(EXEEXT) \
	susy_QCDdc_test$(EXEEXT) susy_Kunszt_test$(EXEEXT) \
	MC_hel_test$(EXEEXT) MC_col_test$(EXEEXT) MC_gen_test$(EXEEXT) \
	s_int_test$(EXEEXT) ps_tree_test$(EXEEXT) \
	ps_reverse_test$(EXEEXT) pstree_shat_test$(EXEEXT) \
	parni_test$(EXEEXT) LHAPDF_test$(EXEEXT) ps_vars_test$(EXEEXT) \
	save_load_test$(EXEEXT) speed_test$(EXEEXT)
TESTS = bitstring_test$(EXEEXT) phi3_graphs_test$(EXEEXT) \
	phi34_graphs_test$(EXEEXT) QCD_procs_test$(EXEEXT) \
	Pauli_basis_test$(EXEEXT) Weyl_basis_test$(EXEEXT) \
	m_spinor_test$(EXEEXT) Pauli_spinor_test$(EXEEXT) \
	Weyl_spinor_test$(EXEEXT) discr_cols_test$(EXEEXT) \
	cont_cols_test$(EXEEXT) QEDch_test$(EXEEXT) \
	QEDdh_test$(EXEEXT) QCDcc_test$(EXEEXT) QCDdc_test$(EXEEXT) \
	Parke_Taylor_cc_test$(EXEEXT) Parke_Taylor_dc_test$(EXEEXT) \
	SM_test$(EXEEXT) SM_params_test$(EXEEXT) \
	susy_QED_test$(EXEEXT) susy_QCDcc_test$(EXEEXT) \
	susy_QCDdc_test$(EXEEXT) susy_Kunszt_test$(EXEEXT) \
	MC_hel_test$(EXEEXT) MC_col_test$(EXEEXT) MC_gen_test$(EXEEXT) \
	s_int_test$(EXEEXT) ps_tree_test$(EXEEXT) \
	ps_reverse_test$(EXEEXT) pstree_shat_test$(EXEEXT) \
	parni_test$(EXEEXT) LHAPDF_test$(EXEEXT) ps_vars_test$(EXEEXT) \
	save_load_test$(EXEEXT) speed_test$(EXEEXT)
subdir = test
DIST_COMMON = $(srcdir)/Makefile.in $(srcdir)/Makefile.am \
	$(top_srcdir)/build-aux/depcomp $(check_HEADERS) \
	$(top_srcdir)/build-aux/test-driver
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
mkinstalldirs = $(install_sh) -d
CONFIG_HEADER = $(top_builddir)/config.h
CONFIG_CLEAN_FILES =
CONFIG_CLEAN_VPATH_FILES =
libCamtest_la_LIBADD =
am_libCamtest_la_OBJECTS = QEDPbdh.lo QEDPbch.lo QEDWbdh.lo QEDWbch.lo \
	QEDPbKsdh.lo QEDPbpsdh.lo QEDWbKsdh.lo QEDWbpsdh.lo \
	QCDPbchabcc.lo QCDPbchabcc_clone.lo QCDPbchabdc.lo \
	QCDPbchcfcc.lo QCDPbchcfcc_clone.lo QCDPbchcfdc.lo \
	QCDPbchcfdc_clone.lo QCDPbdhcfcc.lo QCDPbdhcfdc.lo SMWbhsch.lo \
	SMPbKsch.lo susy_QEDWb.lo susy_QCDPbchabcc.lo \
	susy_QCDPbchcfcc.lo susy_QCDPbchcfdc.lo susy_QCDPbdhcfcc.lo
libCamtest_la_OBJECTS = $(am_libCamtest_la_OBJECTS)
AM_V_lt = $(am__v_lt_$(V))
am__v_lt_ = $(am__v_lt_$(AM_DEFAULT_VERBOSITY))
am__v_lt_0 = --silent
am__v_lt_1 = 
am_LHAPDF_test_OBJECTS = LHAPDF_test.$(OBJEXT)
LHAPDF_test_OBJECTS = $(am_LHAPDF_test_OBJECTS)
LHAPDF_test_LDADD = $(LDADD)
am_MC_col_test_OBJECTS = MC_col_test.$(OBJEXT)
MC_col_test_OBJECTS = $(am_MC_col_test_OBJECTS)
MC_col_test_LDADD = $(LDADD)
am_MC_gen_test_OBJECTS = MC_gen_test.$(OBJEXT)
MC_gen_test_OBJECTS = $(am_MC_gen_test_OBJECTS)
MC_gen_test_LDADD = $(LDADD)
am_MC_hel_test_OBJECTS = MC_hel_test.$(OBJEXT)
MC_hel_test_OBJECTS = $(am_MC_hel_test_OBJECTS)
MC_hel_test_LDADD = $(LDADD)
am_Parke_Taylor_cc_test_OBJECTS = Parke_Taylor_cc_test.$(OBJEXT)
Parke_Taylor_cc_test_OBJECTS = $(am_Parke_Taylor_cc_test_OBJECTS)
Parke_Taylor_cc_test_LDADD = $(LDADD)
am_Parke_Taylor_dc_test_OBJECTS = Parke_Taylor_dc_test.$(OBJEXT)
Parke_Taylor_dc_test_OBJECTS = $(am_Parke_Taylor_dc_test_OBJECTS)
Parke_Taylor_dc_test_LDADD = $(LDADD)
am_Pauli_basis_test_OBJECTS = Pauli_basis_test.$(OBJEXT)
Pauli_basis_test_OBJECTS = $(am_Pauli_basis_test_OBJECTS)
Pauli_basis_test_LDADD = $(LDADD)
am_Pauli_spinor_test_OBJECTS = Pauli_spinor_test.$(OBJEXT)
Pauli_spinor_test_OBJECTS = $(am_Pauli_spinor_test_OBJECTS)
Pauli_spinor_test_LDADD = $(LDADD)
am_QCD_procs_test_OBJECTS = QCD_procs_test.$(OBJEXT)
QCD_procs_test_OBJECTS = $(am_QCD_procs_test_OBJECTS)
QCD_procs_test_LDADD = $(LDADD)
am_QCDcc_test_OBJECTS = QCDcc_test.$(OBJEXT)
QCDcc_test_OBJECTS = $(am_QCDcc_test_OBJECTS)
QCDcc_test_LDADD = $(LDADD)
am_QCDdc_test_OBJECTS = QCDdc_test.$(OBJEXT)
QCDdc_test_OBJECTS = $(am_QCDdc_test_OBJECTS)
QCDdc_test_LDADD = $(LDADD)
am_QEDch_test_OBJECTS = QEDch_test.$(OBJEXT)
QEDch_test_OBJECTS = $(am_QEDch_test_OBJECTS)
QEDch_test_LDADD = $(LDADD)
am_QEDdh_test_OBJECTS = QEDdh_test.$(OBJEXT)
QEDdh_test_OBJECTS = $(am_QEDdh_test_OBJECTS)
QEDdh_test_LDADD = $(LDADD)
am_SM_params_test_OBJECTS = SM_params_test.$(OBJEXT)
SM_params_test_OBJECTS = $(am_SM_params_test_OBJECTS)
SM_params_test_LDADD = $(LDADD)
am_SM_test_OBJECTS = SM_test.$(OBJEXT)
SM_test_OBJECTS = $(am_SM_test_OBJECTS)
SM_test_LDADD = $(LDADD)
am_Weyl_basis_test_OBJECTS = Weyl_basis_test.$(OBJEXT)
Weyl_basis_test_OBJECTS = $(am_Weyl_basis_test_OBJECTS)
Weyl_basis_test_LDADD = $(LDADD)
am_Weyl_spinor_test_OBJECTS = Weyl_spinor_test.$(OBJEXT)
Weyl_spinor_test_OBJECTS = $(am_Weyl_spinor_test_OBJECTS)
Weyl_spinor_test_LDADD = $(LDADD)
am_bitstring_test_OBJECTS = bitstring_test.$(OBJEXT)
bitstring_test_OBJECTS = $(am_bitstring_test_OBJECTS)
bitstring_test_LDADD = $(LDADD)
am_cont_cols_test_OBJECTS = cont_cols_test.$(OBJEXT)
cont_cols_test_OBJECTS = $(am_cont_cols_test_OBJECTS)
cont_cols_test_LDADD = $(LDADD)
am_discr_cols_test_OBJECTS = discr_cols_test.$(OBJEXT)
discr_cols_test_OBJECTS = $(am_discr_cols_test_OBJECTS)
discr_cols_test_LDADD = $(LDADD)
am_m_spinor_test_OBJECTS = m_spinor_test.$(OBJEXT)
m_spinor_test_OBJECTS = $(am_m_spinor_test_OBJECTS)
m_spinor_test_LDADD = $(LDADD)
am_parni_test_OBJECTS = parni_test.$(OBJEXT)
parni_test_OBJECTS = $(am_parni_test_OBJECTS)
parni_test_LDADD = $(LDADD)
am_phi34_graphs_test_OBJECTS = phi34_graphs_test.$(OBJEXT)
phi34_graphs_test_OBJECTS = $(am_phi34_graphs_test_OBJECTS)
phi34_graphs_test_LDADD = $(LDADD)
am_phi3_graphs_test_OBJECTS = phi3_graphs_test.$(OBJEXT)
phi3_graphs_test_OBJECTS = $(am_phi3_graphs_test_OBJECTS)
phi3_graphs_test_LDADD = $(LDADD)
am_ps_reverse_test_OBJECTS = ps_reverse_test.$(OBJEXT)
ps_reverse_test_OBJECTS = $(am_ps_reverse_test_OBJECTS)
ps_reverse_test_LDADD = $(LDADD)
am_ps_tree_test_OBJECTS = ps_tree_test.$(OBJEXT)
ps_tree_test_OBJECTS = $(am_ps_tree_test_OBJECTS)
ps_tree_test_LDADD = $(LDADD)
am_ps_vars_test_OBJECTS = ps_vars_test.$(OBJEXT)
ps_vars_test_OBJECTS = $(am_ps_vars_test_OBJECTS)
ps_vars_test_LDADD = $(LDADD)
am_pstree_shat_test_OBJECTS = pstree_shat_test.$(OBJEXT)
pstree_shat_test_OBJECTS = $(am_pstree_shat_test_OBJECTS)
pstree_shat_test_LDADD = $(LDADD)
am_s_int_test_OBJECTS = s_int_test.$(OBJEXT)
s_int_test_OBJECTS = $(am_s_int_test_OBJECTS)
s_int_test_LDADD = $(LDADD)
am_save_load_test_OBJECTS = save_load_test.$(OBJEXT)
save_load_test_OBJECTS = $(am_save_load_test_OBJECTS)
save_load_test_LDADD = $(LDADD)
am_speed_test_OBJECTS = speed_test.$(OBJEXT)
speed_test_OBJECTS = $(am_speed_test_OBJECTS)
speed_test_LDADD = $(LDADD)
am_susy_Kunszt_test_OBJECTS = susy_Kunszt_test.$(OBJEXT)
susy_Kunszt_test_OBJECTS = $(am_susy_Kunszt_test_OBJECTS)
susy_Kunszt_test_LDADD = $(LDADD)
am_susy_QCDcc_test_OBJECTS = susy_QCDcc_test.$(OBJEXT)
susy_QCDcc_test_OBJECTS = $(am_susy_QCDcc_test_OBJECTS)
susy_QCDcc_test_LDADD = $(LDADD)
am_susy_QCDdc_test_OBJECTS = susy_QCDdc_test.$(OBJEXT)
susy_QCDdc_test_OBJECTS = $(am_susy_QCDdc_test_OBJECTS)
susy_QCDdc_test_LDADD = $(LDADD)
am_susy_QED_test_OBJECTS = susy_QED_test.$(OBJEXT)
susy_QED_test_OBJECTS = $(am_susy_QED_test_OBJECTS)
susy_QED_test_LDADD = $(LDADD)
AM_V_P = $(am__v_P_$(V))
am__v_P_ = $(am__v_P_$(AM_DEFAULT_VERBOSITY))
am__v_P_0 = false
am__v_P_1 = :
AM_V_GEN = $(am__v_GEN_$(V))
am__v_GEN_ = $(am__v_GEN_$(AM_DEFAULT_VERBOSITY))
am__v_GEN_0 = @echo "  GEN     " $@;
am__v_GEN_1 = 
AM_V_at = $(am__v_at_$(V))
am__v_at_ = $(am__v_at_$(AM_DEFAULT_VERBOSITY))
am__v_at_0 = @
am__v_at_1 = 
DEFAULT_INCLUDES = -I. -I$(top_builddir)
depcomp = $(SHELL) $(top_srcdir)/build-aux/depcomp
am__depfiles_maybe = depfiles
am__mv = mv -f
CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
LTCXXCOMPILE = $(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) \
	$(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) \
	$(AM_CXXFLAGS) $(CXXFLAGS)
AM_V_CXX = $(am__v_CXX_$(V))
am__v_CXX_ = $(am__v_CXX_$(AM_DEFAULT_VERBOSITY))
am__v_CXX_0 = @echo "  CXX     " $@;
am__v_CXX_1 = 
CXXLD = $(CXX)
CXXLINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CXXLD) $(AM_CXXFLAGS) \
	$(CXXFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
AM_V_CXXLD = $(am__v_CXXLD_$(V))
am__v_CXXLD_ = $(am__v_CXXLD_$(AM_DEFAULT_VERBOSITY))
am__v_CXXLD_0 = @echo "  CXXLD   " $@;
am__v_CXXLD_1 = 
SOURCES = $(libCamtest_la_SOURCES) $(LHAPDF_test_SOURCES) \
	$(MC_col_test_SOURCES) $(MC_gen_test_SOURCES) \
	$(MC_hel_test_SOURCES) $(Parke_Taylor_cc_test_SOURCES) \
	$(Parke_Taylor_dc_test_SOURCES) $(Pauli_basis_test_SOURCES) \
	$(Pauli_spinor_test_SOURCES) $(QCD_procs_test_SOURCES) \
	$(QCDcc_test_SOURCES) $(QCDdc_test_SOURCES) \
	$(QEDch_test_SOURCES) $(QEDdh_test_SOURCES) \
	$(SM_params_test_SOURCES) $(SM_test_SOURCES) \
	$(Weyl_basis_test_SOURCES) $(Weyl_spinor_test_SOURCES) \
	$(bitstring_test_SOURCES) $(cont_cols_test_SOURCES) \
	$(discr_cols_test_SOURCES) $(m_spinor_test_SOURCES) \
	$(parni_test_SOURCES) $(phi34_graphs_test_SOURCES) \
	$(phi3_graphs_test_SOURCES) $(ps_reverse_test_SOURCES) \
	$(ps_tree_test_SOURCES) $(ps_vars_test_SOURCES) \
	$(pstree_shat_test_SOURCES) $(s_int_test_SOURCES) \
	$(save_load_test_SOURCES) $(speed_test_SOURCES) \
	$(susy_Kunszt_test_SOURCES) $(susy_QCDcc_test_SOURCES) \
	$(susy_QCDdc_test_SOURCES) $(susy_QED_test_SOURCES)
DIST_SOURCES = $(libCamtest_la_SOURCES) $(LHAPDF_test_SOURCES) \
	$(MC_col_test_SOURCES) $(MC_gen_test_SOURCES) \
	$(MC_hel_test_SOURCES) $(Parke_Taylor_cc_test_SOURCES) \
	$(Parke_Taylor_dc_test_SOURCES) $(Pauli_basis_test_SOURCES) \
	$(Pauli_spinor_test_SOURCES) $(QCD_procs_test_SOURCES) \
	$(QCDcc_test_SOURCES) $(QCDdc_test_SOURCES) \
	$(QEDch_test_SOURCES) $(QEDdh_test_SOURCES) \
	$(SM_params_test_SOURCES) $(SM_test_SOURCES) \
	$(Weyl_basis_test_SOURCES) $(Weyl_spinor_test_SOURCES) \
	$(bitstring_test_SOURCES) $(cont_cols_test_SOURCES) \
	$(discr_cols_test_SOURCES) $(m_spinor_test_SOURCES) \
	$(parni_test_SOURCES) $(phi34_graphs_test_SOURCES) \
	$(phi3_graphs_test_SOURCES) $(ps_reverse_test_SOURCES) \
	$(ps_tree_test_SOURCES) $(ps_vars_test_SOURCES) \
	$(pstree_shat_test_SOURCES) $(s_int_test_SOURCES) \
	$(save_load_test_SOURCES) $(speed_test_SOURCES) \
	$(susy_Kunszt_test_SOURCES) $(susy_QCDcc_test_SOURCES) \
	$(susy_QCDdc_test_SOURCES) $(susy_QED_test_SOURCES)
am__can_run_installinfo = \
  case $$AM_UPDATE_INFO_DIR in \
    n|no|NO) false;; \
    *) (install-info --version) >/dev/null 2>&1;; \
  esac
am__tagged_files = $(HEADERS) $(SOURCES) $(TAGS_FILES) $(LISP)
# Read a list of newline-separated strings from the standard input,
# and print each of them once, without duplicates.  Input order is
# *not* preserved.
am__uniquify_input = $(AWK) '\
  BEGIN { nonempty = 0; } \
  { items[$$0] = 1; nonempty = 1; } \
  END { if (nonempty) { for (i in items) print i; }; } \
'
# Make sure the list of sources is unique.  This is necessary because,
# e.g., the same source file might be shared among _SOURCES variables
# for different programs/libraries.
am__define_uniq_tagged_files = \
  list='$(am__tagged_files)'; \
  unique=`for i in $$list; do \
    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
  done | $(am__uniquify_input)`
ETAGS = etags
CTAGS = ctags
am__tty_colors_dummy = \
  mgn= red= grn= lgn= blu= brg= std=; \
  am__color_tests=no
am__tty_colors = { \
  $(am__tty_colors_dummy); \
  if test "X$(AM_COLOR_TESTS)" = Xno; then \
    am__color_tests=no; \
  elif test "X$(AM_COLOR_TESTS)" = Xalways; then \
    am__color_tests=yes; \
  elif test "X$$TERM" != Xdumb && { test -t 1; } 2>/dev/null; then \
    am__color_tests=yes; \
  fi; \
  if test $$am__color_tests = yes; then \
    red='[0;31m'; \
    grn='[0;32m'; \
    lgn='[1;32m'; \
    blu='[1;34m'; \
    mgn='[0;35m'; \
    brg='[1m'; \
    std='[m'; \
  fi; \
}
am__vpath_adj_setup = srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`;
am__vpath_adj = case $$p in \
    $(srcdir)/*) f=`echo "$$p" | sed "s|^$$srcdirstrip/||"`;; \
    *) f=$$p;; \
  esac;
am__strip_dir = f=`echo $$p | sed -e 's|^.*/||'`;
am__install_max = 40
am__nobase_strip_setup = \
  srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*|]/\\\\&/g'`
am__nobase_strip = \
  for p in $$list; do echo "$$p"; done | sed -e "s|$$srcdirstrip/||"
am__nobase_list = $(am__nobase_strip_setup); \
  for p in $$list; do echo "$$p $$p"; done | \
  sed "s| $$srcdirstrip/| |;"' / .*\//!s/ .*/ ./; s,\( .*\)/[^/]*$$,\1,' | \
  $(AWK) 'BEGIN { files["."] = "" } { files[$$2] = files[$$2] " " $$1; \
    if (++n[$$2] == $(am__install_max)) \
      { print $$2, files[$$2]; n[$$2] = 0; files[$$2] = "" } } \
    END { for (dir in files) print dir, files[dir] }'
am__base_list = \
  sed '$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;s/\n/ /g' | \
  sed '$$!N;$$!N;$$!N;$$!N;s/\n/ /g'
am__uninstall_files_from_dir = { \
  test -z "$$files" \
    || { test ! -d "$$dir" && test ! -f "$$dir" && test ! -r "$$dir"; } \
    || { echo " ( cd '$$dir' && rm -f" $$files ")"; \
         $(am__cd) "$$dir" && rm -f $$files; }; \
  }
am__recheck_rx = ^[ 	]*:recheck:[ 	]*
am__global_test_result_rx = ^[ 	]*:global-test-result:[ 	]*
am__copy_in_global_log_rx = ^[ 	]*:copy-in-global-log:[ 	]*
# A command that, given a newline-separated list of test names on the
# standard input, print the name of the tests that are to be re-run
# upon "make recheck".
am__list_recheck_tests = $(AWK) '{ \
  recheck = 1; \
  while ((rc = (getline line < ($$0 ".trs"))) != 0) \
    { \
      if (rc < 0) \
        { \
          if ((getline line2 < ($$0 ".log")) < 0) \
	    recheck = 0; \
          break; \
        } \
      else if (line ~ /$(am__recheck_rx)[nN][Oo]/) \
        { \
          recheck = 0; \
          break; \
        } \
      else if (line ~ /$(am__recheck_rx)[yY][eE][sS]/) \
        { \
          break; \
        } \
    }; \
  if (recheck) \
    print $$0; \
  close ($$0 ".trs"); \
  close ($$0 ".log"); \
}'
# A command that, given a newline-separated list of test names on the
# standard input, create the global log from their .trs and .log files.
am__create_global_log = $(AWK) ' \
function fatal(msg) \
{ \
  print "fatal: making $@: " msg | "cat >&2"; \
  exit 1; \
} \
function rst_section(header) \
{ \
  print header; \
  len = length(header); \
  for (i = 1; i <= len; i = i + 1) \
    printf "="; \
  printf "\n\n"; \
} \
{ \
  copy_in_global_log = 1; \
  global_test_result = "RUN"; \
  while ((rc = (getline line < ($$0 ".trs"))) != 0) \
    { \
      if (rc < 0) \
         fatal("failed to read from " $$0 ".trs"); \
      if (line ~ /$(am__global_test_result_rx)/) \
        { \
          sub("$(am__global_test_result_rx)", "", line); \
          sub("[ 	]*$$", "", line); \
          global_test_result = line; \
        } \
      else if (line ~ /$(am__copy_in_global_log_rx)[nN][oO]/) \
        copy_in_global_log = 0; \
    }; \
  if (copy_in_global_log) \
    { \
      rst_section(global_test_result ": " $$0); \
      while ((rc = (getline line < ($$0 ".log"))) != 0) \
      { \
        if (rc < 0) \
          fatal("failed to read from " $$0 ".log"); \
        print line; \
      }; \
      printf "\n"; \
    }; \
  close ($$0 ".trs"); \
  close ($$0 ".log"); \
}'
# Restructured Text title.
am__rst_title = { sed 's/.*/   &   /;h;s/./=/g;p;x;s/ *$$//;p;g' && echo; }
# Solaris 10 'make', and several other traditional 'make' implementations,
# pass "-e" to $(SHELL), and POSIX 2008 even requires this.  Work around it
# by disabling -e (using the XSI extension "set +e") if it's set.
am__sh_e_setup = case $$- in *e*) set +e;; esac
# Default flags passed to test drivers.
am__common_driver_flags = \
  --color-tests "$$am__color_tests" \
  --enable-hard-errors "$$am__enable_hard_errors" \
  --expect-failure "$$am__expect_failure"
# To be inserted before the command running the test.  Creates the
# directory for the log if needed.  Stores in $dir the directory
# containing $f, in $tst the test, in $log the log.  Executes the
# developer- defined test setup AM_TESTS_ENVIRONMENT (if any), and
# passes TESTS_ENVIRONMENT.  Set up options for the wrapper that
# will run the test scripts (or their associated LOG_COMPILER, if
# thy have one).
am__check_pre = \
$(am__sh_e_setup);					\
$(am__vpath_adj_setup) $(am__vpath_adj)			\
$(am__tty_colors);					\
srcdir=$(srcdir); export srcdir;			\
case "$@" in						\
  */*) am__odir=`echo "./$@" | sed 's|/[^/]*$$||'`;;	\
    *) am__odir=.;; 					\
esac;							\
test "x$$am__odir" = x"." || test -d "$$am__odir" 	\
  || $(MKDIR_P) "$$am__odir" || exit $$?;		\
if test -f "./$$f"; then dir=./;			\
elif test -f "$$f"; then dir=;				\
else dir="$(srcdir)/"; fi;				\
tst=$$dir$$f; log='$@'; 				\
if test -n '$(DISABLE_HARD_ERRORS)'; then		\
  am__enable_hard_errors=no; 				\
else							\
  am__enable_hard_errors=yes; 				\
fi; 							\
case " $(XFAIL_TESTS) " in				\
  *[\ \	]$$f[\ \	]* | *[\ \	]$$dir$$f[\ \	]*) \
    am__expect_failure=yes;;				\
  *)							\
    am__expect_failure=no;;				\
esac; 							\
$(AM_TESTS_ENVIRONMENT) $(TESTS_ENVIRONMENT)
# A shell command to get the names of the tests scripts with any registered
# extension removed (i.e., equivalently, the names of the test logs, with
# the '.log' extension removed).  The result is saved in the shell variable
# '$bases'.  This honors runtime overriding of TESTS and TEST_LOGS.  Sadly,
# we cannot use something simpler, involving e.g., "$(TEST_LOGS:.log=)",
# since that might cause problem with VPATH rewrites for suffix-less tests.
# See also 'test-harness-vpath-rewrite.sh' and 'test-trs-basic.sh'.
am__set_TESTS_bases = \
  bases='$(TEST_LOGS)'; \
  bases=`for i in $$bases; do echo $$i; done | sed 's/\.log$$//'`; \
  bases=`echo $$bases`
RECHECK_LOGS = $(TEST_LOGS)
AM_RECURSIVE_TARGETS = check recheck
TEST_SUITE_LOG = test-suite.log
TEST_EXTENSIONS =  .test
LOG_DRIVER = $(SHELL) $(top_srcdir)/build-aux/test-driver
LOG_COMPILE = $(LOG_COMPILER) $(AM_LOG_FLAGS) $(LOG_FLAGS)
am__set_b = \
  case '$@' in \
    */*) \
      case '$*' in \
        */*) b='$*';; \
          *) b=`echo '$@' | sed 's/\.log$$//'`; \
       esac;; \
    *) \
      b='$*';; \
  esac
am__test_logs1 = $(TESTS:=.log)
am__test_logs2 = $(am__test_logs1:.log=.log)
TEST_LOGS = $(am__test_logs2:.test.log=.log)
TEST_LOG_DRIVER = $(SHELL) $(top_srcdir)/build-aux/test-driver
TEST_LOG_COMPILE = $(TEST_LOG_COMPILER) $(AM_TEST_LOG_FLAGS) \
	$(TEST_LOG_FLAGS)
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
ACLOCAL = aclocal-1.14
AMTAR = $${TAR-tar}
AM_DEFAULT_VERBOSITY = 1
AR = ar
AUTOCONF = autoconf
AUTOHEADER = autoheader
AUTOMAKE = automake-1.14
AWK = awk
CC = gcc
CCDEPMODE = depmode=gcc3
CFLAGS = -g -O2
CPP = gcc -E
CPPFLAGS = 
CXX = /usr/local/bin/g++-4.8
CXXCPP = /usr/local/bin/g++-4.8 -E
CXXDEPMODE = depmode=gcc3
CXXFLAGS = -g -O2
CYGPATH_W = echo
DEFS = -DHAVE_CONFIG_H
DEPDIR = .deps
DLLTOOL = false
DSYMUTIL = dsymutil
DUMPBIN = 
ECHO_C = \c
ECHO_N = 
ECHO_T = 
EGREP = /usr/bin/grep -E
EXEEXT = 
FGREP = /usr/bin/grep -F
GREP = /usr/bin/grep
HAVE_GNUPLOT = yes
INSTALL = /usr/bin/install -c
INSTALL_DATA = ${INSTALL} -m 644
INSTALL_PROGRAM = ${INSTALL}
INSTALL_SCRIPT = ${INSTALL}
INSTALL_STRIP_PROGRAM = $(install_sh) -c -s
LD = /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/ld
LDFLAGS = 
LHAPDF_DIR = /usr/local
LIBOBJS =  ${LIBOBJDIR}error$U.o
LIBS = 
LIBTOOL = $(SHELL) $(top_builddir)/libtool
LIPO = lipo
LN_S = ln -s
LTLIBOBJS =  ${LIBOBJDIR}error$U.lo
MAKEINFO = makeinfo
MANIFEST_TOOL = :
MKDIR_P = ../build-aux/install-sh -c -d
NM = /usr/bin/nm
NMEDIT = nmedit
OBJDUMP = false
OBJEXT = o
OTOOL = otool
OTOOL64 = :
PACKAGE = camgen
PACKAGE_BUGREPORT = Gijs van den Oord <G.vandenOord@gmail.com>
PACKAGE_NAME = Camgen
PACKAGE_STRING = Camgen 1.0
PACKAGE_TARNAME = camgen
PACKAGE_URL = 
PACKAGE_VERSION = 1.0
PATH_SEPARATOR = :
RANLIB = ranlib
SED = /usr/bin/sed
SET_MAKE = 
SHELL = /bin/sh
STRIP = strip
VERSION = 1.0
abs_builddir = /Users/vdoord/Camgen/test
abs_srcdir = /Users/vdoord/Camgen/test
abs_top_builddir = /Users/vdoord/Camgen
abs_top_srcdir = /Users/vdoord/Camgen
ac_ct_AR = ar
ac_ct_CC = gcc
ac_ct_CXX = 
ac_ct_DUMPBIN = 
am__include = include
am__leading_dot = .
am__quote = 
am__tar = $${TAR-tar} chof - "$$tardir"
am__untar = $${TAR-tar} xf -
bindir = ${exec_prefix}/bin
build = i386-apple-darwin13.1.0
build_alias = 
build_cpu = i386
build_os = darwin13.1.0
build_vendor = apple
builddir = .
datadir = ${datarootdir}
datarootdir = ${prefix}/share
docdir = ${datarootdir}/doc/${PACKAGE_TARNAME}
dvidir = ${docdir}
exec_prefix = ${prefix}
host = i386-apple-darwin13.1.0
host_alias = 
host_cpu = i386
host_os = darwin13.1.0
host_vendor = apple
htmldir = ${docdir}
includedir = ${prefix}/include
infodir = ${datarootdir}/info
install_sh = ${SHELL} /Users/vdoord/Camgen/build-aux/install-sh
libdir = ${exec_prefix}/lib
libexecdir = ${exec_prefix}/libexec
localedir = ${datarootdir}/locale
localstatedir = ${prefix}/var
mandir = ${datarootdir}/man
mkdir_p = $(MKDIR_P)
oldincludedir = /usr/include
pdfdir = ${docdir}
prefix = /usr/local
program_transform_name = s,x,x,
psdir = ${docdir}
sbindir = ${exec_prefix}/sbin
sharedstatedir = ${prefix}/com
srcdir = .
sysconfdir = ${prefix}/etc
target_alias = 
top_build_prefix = ../
top_builddir = ..
top_srcdir = ..
AM_CPPFLAGS = -O3 -pipe -I$(top_srcdir)/include
EXTRA_DIST = plots
AM_LDFLAGS = -L$(top_srcdir)/lib -lCamgen -lCamtest
#AM_LDFLAGS = -L$(top_srcdir)/lib -lCamgen -lCamtest -L$(LHAPDF_DIR)/lib -lLHAPDF
check_LTLIBRARIES = libCamtest.la
CLEANFILES = *.o *.dat *.plt *.log
check_HEADERS = ps_gen_tester.h		\
				QEDPbdh.h		\
			    	QEDPbch.h		\
			    	QEDWbdh.h		\
			    	QEDWbch.h		\
			    	QEDPbKsdh.h		\
			    	QEDPbpsdh.h		\
			    	QEDWbKsdh.h		\
			    	QEDWbpsdh.h		\
			    	QCDPbchabcc.h		\
			    	QCDPbchabcc_clone.h	\
			    	QCDPbchabdc.h		\
			    	QCDPbchcfcc.h		\
			    	QCDPbchcfcc_clone.h	\
			    	QCDPbchcfdc.h		\
			    	QCDPbchcfdc_clone.h	\
			    	QCDPbdhcfcc.h		\
			    	QCDPbdhcfdc.h		\
			    	SMWbhsch.h		\
			    	SMPbKsch.h		\
				susy_QEDWb.h		\
				susy_QCDPbchabcc.h	\
				susy_QCDPbchcfcc.h	\
				susy_QCDPbchcfdc.h	\
				susy_QCDPbdhcfcc.h	\
				s_int_tester.h		\
				test_gen.h

libCamtest_la_SOURCES = QEDPbdh.cpp		\
				QEDPbch.cpp		\
			    	QEDWbdh.cpp		\
			    	QEDWbch.cpp		\
			    	QEDPbKsdh.cpp		\
			    	QEDPbpsdh.cpp		\
			    	QEDWbKsdh.cpp		\
			    	QEDWbpsdh.cpp		\
				QCDPbchabcc.cpp		\
			    	QCDPbchabcc_clone.cpp	\
			    	QCDPbchabdc.cpp		\
			    	QCDPbchcfcc.cpp		\
			    	QCDPbchcfcc_clone.cpp	\
			    	QCDPbchcfdc.cpp		\
			    	QCDPbchcfdc_clone.cpp	\
			    	QCDPbdhcfcc.cpp		\
			    	QCDPbdhcfdc.cpp		\
			    	SMWbhsch.cpp		\
			    	SMPbKsch.cpp		\
				susy_QEDWb.cpp		\
				susy_QCDPbchabcc.cpp	\
				susy_QCDPbchcfcc.cpp	\
				susy_QCDPbchcfdc.cpp	\
				susy_QCDPbdhcfcc.cpp

bitstring_test_SOURCES = bitstring_test.cpp
phi3_graphs_test_SOURCES = phi3_graphs_test.cpp
phi34_graphs_test_SOURCES = phi34_graphs_test.cpp
QCD_procs_test_SOURCES = QCD_procs_test.cpp
Pauli_basis_test_SOURCES = Pauli_basis_test.cpp
Weyl_basis_test_SOURCES = Weyl_basis_test.cpp
Pauli_spinor_test_SOURCES = Pauli_spinor_test.cpp
Weyl_spinor_test_SOURCES = Weyl_spinor_test.cpp
m_spinor_test_SOURCES = m_spinor_test.cpp
discr_cols_test_SOURCES = discr_cols_test.cpp
cont_cols_test_SOURCES = cont_cols_test.cpp
QEDch_test_SOURCES = QEDch_test.cpp
QEDdh_test_SOURCES = QEDdh_test.cpp
QCDcc_test_SOURCES = QCDcc_test.cpp
QCDdc_test_SOURCES = QCDdc_test.cpp
Parke_Taylor_cc_test_SOURCES = Parke_Taylor_cc_test.cpp
Parke_Taylor_dc_test_SOURCES = Parke_Taylor_dc_test.cpp
SM_test_SOURCES = SM_test.cpp
SM_params_test_SOURCES = SM_params_test.cpp
susy_QED_test_SOURCES = susy_QED_test.cpp
susy_QCDcc_test_SOURCES = susy_QCDcc_test.cpp
susy_QCDdc_test_SOURCES = susy_QCDdc_test.cpp
susy_Kunszt_test_SOURCES = susy_Kunszt_test.cpp
MC_hel_test_SOURCES = MC_hel_test.cpp
MC_col_test_SOURCES = MC_col_test.cpp
MC_gen_test_SOURCES = MC_gen_test.cpp
s_int_test_SOURCES = s_int_test.cpp
ps_tree_test_SOURCES = ps_tree_test.cpp
ps_reverse_test_SOURCES = ps_reverse_test.cpp
pstree_shat_test_SOURCES = pstree_shat_test.cpp
parni_test_SOURCES = parni_test.cpp
LHAPDF_test_SOURCES = LHAPDF_test.cpp
ps_vars_test_SOURCES = ps_vars_test.cpp
save_load_test_SOURCES = save_load_test.cpp
speed_test_SOURCES = speed_test.cpp
all: all-am

.SUFFIXES:
.SUFFIXES: .cpp .lo .log .o .obj .test .test$(EXEEXT) .trs
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am  $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      ( cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh ) \
	        && { if test -f $@; then exit 0; else break; fi; }; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --gnu test/Makefile'; \
	$(am__cd) $(top_srcdir) && \
	  $(AUTOMAKE) --gnu test/Makefile
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure:  $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(am__aclocal_m4_deps):

clean-checkLTLIBRARIES:
	-test -z "$(check_LTLIBRARIES)" || rm -f $(check_LTLIBRARIES)
	@list='$(check_LTLIBRARIES)'; \
	locs=`for p in $$list; do echo $$p; done | \
	      sed 's|^[^/]*$$|.|; s|/[^/]*$$||; s|$$|/so_locations|' | \
	      sort -u`; \
	test -z "$$locs" || { \
	  echo rm -f $${locs}; \
	  rm -f $${locs}; \
	}

libCamtest.la: $(libCamtest_la_OBJECTS) $(libCamtest_la_DEPENDENCIES) $(EXTRA_libCamtest_la_DEPENDENCIES) 
	$(AM_V_CXXLD)$(CXXLINK)  $(libCamtest_la_OBJECTS) $(libCamtest_la_LIBADD) $(LIBS)

clean-checkPROGRAMS:
	@list='$(check_PROGRAMS)'; test -n "$$list" || exit 0; \
	echo " rm -f" $$list; \
	rm -f $$list || exit $$?; \
	test -n "$(EXEEXT)" || exit 0; \
	list=`for p in $$list; do echo "$$p"; done | sed 's/$(EXEEXT)$$//'`; \
	echo " rm -f" $$list; \
	rm -f $$list

LHAPDF_test$(EXEEXT): $(LHAPDF_test_OBJECTS) $(LHAPDF_test_DEPENDENCIES) $(EXTRA_LHAPDF_test_DEPENDENCIES) 
	@rm -f LHAPDF_test$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(LHAPDF_test_OBJECTS) $(LHAPDF_test_LDADD) $(LIBS)

MC_col_test$(EXEEXT): $(MC_col_test_OBJECTS) $(MC_col_test_DEPENDENCIES) $(EXTRA_MC_col_test_DEPENDENCIES) 
	@rm -f MC_col_test$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(MC_col_test_OBJECTS) $(MC_col_test_LDADD) $(LIBS)

MC_gen_test$(EXEEXT): $(MC_gen_test_OBJECTS) $(MC_gen_test_DEPENDENCIES) $(EXTRA_MC_gen_test_DEPENDENCIES) 
	@rm -f MC_gen_test$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(MC_gen_test_OBJECTS) $(MC_gen_test_LDADD) $(LIBS)

MC_hel_test$(EXEEXT): $(MC_hel_test_OBJECTS) $(MC_hel_test_DEPENDENCIES) $(EXTRA_MC_hel_test_DEPENDENCIES) 
	@rm -f MC_hel_test$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(MC_hel_test_OBJECTS) $(MC_hel_test_LDADD) $(LIBS)

Parke_Taylor_cc_test$(EXEEXT): $(Parke_Taylor_cc_test_OBJECTS) $(Parke_Taylor_cc_test_DEPENDENCIES) $(EXTRA_Parke_Taylor_cc_test_DEPENDENCIES) 
	@rm -f Parke_Taylor_cc_test$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(Parke_Taylor_cc_test_OBJECTS) $(Parke_Taylor_cc_test_LDADD) $(LIBS)

Parke_Taylor_dc_test$(EXEEXT): $(Parke_Taylor_dc_test_OBJECTS) $(Parke_Taylor_dc_test_DEPENDENCIES) $(EXTRA_Parke_Taylor_dc_test_DEPENDENCIES) 
	@rm -f Parke_Taylor_dc_test$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(Parke_Taylor_dc_test_OBJECTS) $(Parke_Taylor_dc_test_LDADD) $(LIBS)

Pauli_basis_test$(EXEEXT): $(Pauli_basis_test_OBJECTS) $(Pauli_basis_test_DEPENDENCIES) $(EXTRA_Pauli_basis_test_DEPENDENCIES) 
	@rm -f Pauli_basis_test$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(Pauli_basis_test_OBJECTS) $(Pauli_basis_test_LDADD) $(LIBS)

Pauli_spinor_test$(EXEEXT): $(Pauli_spinor_test_OBJECTS) $(Pauli_spinor_test_DEPENDENCIES) $(EXTRA_Pauli_spinor_test_DEPENDENCIES) 
	@rm -f Pauli_spinor_test$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(Pauli_spinor_test_OBJECTS) $(Pauli_spinor_test_LDADD) $(LIBS)

QCD_procs_test$(EXEEXT): $(QCD_procs_test_OBJECTS) $(QCD_procs_test_DEPENDENCIES) $(EXTRA_QCD_procs_test_DEPENDENCIES) 
	@rm -f QCD_procs_test$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(QCD_procs_test_OBJECTS) $(QCD_procs_test_LDADD) $(LIBS)

QCDcc_test$(EXEEXT): $(QCDcc_test_OBJECTS) $(QCDcc_test_DEPENDENCIES) $(EXTRA_QCDcc_test_DEPENDENCIES) 
	@rm -f QCDcc_test$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(QCDcc_test_OBJECTS) $(QCDcc_test_LDADD) $(LIBS)

QCDdc_test$(EXEEXT): $(QCDdc_test_OBJECTS) $(QCDdc_test_DEPENDENCIES) $(EXTRA_QCDdc_test_DEPENDENCIES) 
	@rm -f QCDdc_test$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(QCDdc_test_OBJECTS) $(QCDdc_test_LDADD) $(LIBS)

QEDch_test$(EXEEXT): $(QEDch_test_OBJECTS) $(QEDch_test_DEPENDENCIES) $(EXTRA_QEDch_test_DEPENDENCIES) 
	@rm -f QEDch_test$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(QEDch_test_OBJECTS) $(QEDch_test_LDADD) $(LIBS)

QEDdh_test$(EXEEXT): $(QEDdh_test_OBJECTS) $(QEDdh_test_DEPENDENCIES) $(EXTRA_QEDdh_test_DEPENDENCIES) 
	@rm -f QEDdh_test$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(QEDdh_test_OBJECTS) $(QEDdh_test_LDADD) $(LIBS)

SM_params_test$(EXEEXT): $(SM_params_test_OBJECTS) $(SM_params_test_DEPENDENCIES) $(EXTRA_SM_params_test_DEPENDENCIES) 
	@rm -f SM_params_test$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(SM_params_test_OBJECTS) $(SM_params_test_LDADD) $(LIBS)

SM_test$(EXEEXT): $(SM_test_OBJECTS) $(SM_test_DEPENDENCIES) $(EXTRA_SM_test_DEPENDENCIES) 
	@rm -f SM_test$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(SM_test_OBJECTS) $(SM_test_LDADD) $(LIBS)

Weyl_basis_test$(EXEEXT): $(Weyl_basis_test_OBJECTS) $(Weyl_basis_test_DEPENDENCIES) $(EXTRA_Weyl_basis_test_DEPENDENCIES) 
	@rm -f Weyl_basis_test$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(Weyl_basis_test_OBJECTS) $(Weyl_basis_test_LDADD) $(LIBS)

Weyl_spinor_test$(EXEEXT): $(Weyl_spinor_test_OBJECTS) $(Weyl_spinor_test_DEPENDENCIES) $(EXTRA_Weyl_spinor_test_DEPENDENCIES) 
	@rm -f Weyl_spinor_test$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(Weyl_spinor_test_OBJECTS) $(Weyl_spinor_test_LDADD) $(LIBS)

bitstring_test$(EXEEXT): $(bitstring_test_OBJECTS) $(bitstring_test_DEPENDENCIES) $(EXTRA_bitstring_test_DEPENDENCIES) 
	@rm -f bitstring_test$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(bitstring_test_OBJECTS) $(bitstring_test_LDADD) $(LIBS)

cont_cols_test$(EXEEXT): $(cont_cols_test_OBJECTS) $(cont_cols_test_DEPENDENCIES) $(EXTRA_cont_cols_test_DEPENDENCIES) 
	@rm -f cont_cols_test$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(cont_cols_test_OBJECTS) $(cont_cols_test_LDADD) $(LIBS)

discr_cols_test$(EXEEXT): $(discr_cols_test_OBJECTS) $(discr_cols_test_DEPENDENCIES) $(EXTRA_discr_cols_test_DEPENDENCIES) 
	@rm -f discr_cols_test$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(discr_cols_test_OBJECTS) $(discr_cols_test_LDADD) $(LIBS)

m_spinor_test$(EXEEXT): $(m_spinor_test_OBJECTS) $(m_spinor_test_DEPENDENCIES) $(EXTRA_m_spinor_test_DEPENDENCIES) 
	@rm -f m_spinor_test$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(m_spinor_test_OBJECTS) $(m_spinor_test_LDADD) $(LIBS)

parni_test$(EXEEXT): $(parni_test_OBJECTS) $(parni_test_DEPENDENCIES) $(EXTRA_parni_test_DEPENDENCIES) 
	@rm -f parni_test$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(parni_test_OBJECTS) $(parni_test_LDADD) $(LIBS)

phi34_graphs_test$(EXEEXT): $(phi34_graphs_test_OBJECTS) $(phi34_graphs_test_DEPENDENCIES) $(EXTRA_phi34_graphs_test_DEPENDENCIES) 
	@rm -f phi34_graphs_test$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(phi34_graphs_test_OBJECTS) $(phi34_graphs_test_LDADD) $(LIBS)

phi3_graphs_test$(EXEEXT): $(phi3_graphs_test_OBJECTS) $(phi3_graphs_test_DEPENDENCIES) $(EXTRA_phi3_graphs_test_DEPENDENCIES) 
	@rm -f phi3_graphs_test$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(phi3_graphs_test_OBJECTS) $(phi3_graphs_test_LDADD) $(LIBS)

ps_reverse_test$(EXEEXT): $(ps_reverse_test_OBJECTS) $(ps_reverse_test_DEPENDENCIES) $(EXTRA_ps_reverse_test_DEPENDENCIES) 
	@rm -f ps_reverse_test$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(ps_reverse_test_OBJECTS) $(ps_reverse_test_LDADD) $(LIBS)

ps_tree_test$(EXEEXT): $(ps_tree_test_OBJECTS) $(ps_tree_test_DEPENDENCIES) $(EXTRA_ps_tree_test_DEPENDENCIES) 
	@rm -f ps_tree_test$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(ps_tree_test_OBJECTS) $(ps_tree_test_LDADD) $(LIBS)

ps_vars_test$(EXEEXT): $(ps_vars_test_OBJECTS) $(ps_vars_test_DEPENDENCIES) $(EXTRA_ps_vars_test_DEPENDENCIES) 
	@rm -f ps_vars_test$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(ps_vars_test_OBJECTS) $(ps_vars_test_LDADD) $(LIBS)

pstree_shat_test$(EXEEXT): $(pstree_shat_test_OBJECTS) $(pstree_shat_test_DEPENDENCIES) $(EXTRA_pstree_shat_test_DEPENDENCIES) 
	@rm -f pstree_shat_test$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(pstree_shat_test_OBJECTS) $(pstree_shat_test_LDADD) $(LIBS)

s_int_test$(EXEEXT): $(s_int_test_OBJECTS) $(s_int_test_DEPENDENCIES) $(EXTRA_s_int_test_DEPENDENCIES) 
	@rm -f s_int_test$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(s_int_test_OBJECTS) $(s_int_test_LDADD) $(LIBS)

save_load_test$(EXEEXT): $(save_load_test_OBJECTS) $(save_load_test_DEPENDENCIES) $(EXTRA_save_load_test_DEPENDENCIES) 
	@rm -f save_load_test$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(save_load_test_OBJECTS) $(save_load_test_LDADD) $(LIBS)

speed_test$(EXEEXT): $(speed_test_OBJECTS) $(speed_test_DEPENDENCIES) $(EXTRA_speed_test_DEPENDENCIES) 
	@rm -f speed_test$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(speed_test_OBJECTS) $(speed_test_LDADD) $(LIBS)

susy_Kunszt_test$(EXEEXT): $(susy_Kunszt_test_OBJECTS) $(susy_Kunszt_test_DEPENDENCIES) $(EXTRA_susy_Kunszt_test_DEPENDENCIES) 
	@rm -f susy_Kunszt_test$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(susy_Kunszt_test_OBJECTS) $(susy_Kunszt_test_LDADD) $(LIBS)

susy_QCDcc_test$(EXEEXT): $(susy_QCDcc_test_OBJECTS) $(susy_QCDcc_test_DEPENDENCIES) $(EXTRA_susy_QCDcc_test_DEPENDENCIES) 
	@rm -f susy_QCDcc_test$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(susy_QCDcc_test_OBJECTS) $(susy_QCDcc_test_LDADD) $(LIBS)

susy_QCDdc_test$(EXEEXT): $(susy_QCDdc_test_OBJECTS) $(susy_QCDdc_test_DEPENDENCIES) $(EXTRA_susy_QCDdc_test_DEPENDENCIES) 
	@rm -f susy_QCDdc_test$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(susy_QCDdc_test_OBJECTS) $(susy_QCDdc_test_LDADD) $(LIBS)

susy_QED_test$(EXEEXT): $(susy_QED_test_OBJECTS) $(susy_QED_test_DEPENDENCIES) $(EXTRA_susy_QED_test_DEPENDENCIES) 
	@rm -f susy_QED_test$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(susy_QED_test_OBJECTS) $(susy_QED_test_LDADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

include ./$(DEPDIR)/LHAPDF_test.Po
include ./$(DEPDIR)/MC_col_test.Po
include ./$(DEPDIR)/MC_gen_test.Po
include ./$(DEPDIR)/MC_hel_test.Po
include ./$(DEPDIR)/Parke_Taylor_cc_test.Po
include ./$(DEPDIR)/Parke_Taylor_dc_test.Po
include ./$(DEPDIR)/Pauli_basis_test.Po
include ./$(DEPDIR)/Pauli_spinor_test.Po
include ./$(DEPDIR)/QCDPbchabcc.Plo
include ./$(DEPDIR)/QCDPbchabcc_clone.Plo
include ./$(DEPDIR)/QCDPbchabdc.Plo
include ./$(DEPDIR)/QCDPbchcfcc.Plo
include ./$(DEPDIR)/QCDPbchcfcc_clone.Plo
include ./$(DEPDIR)/QCDPbchcfdc.Plo
include ./$(DEPDIR)/QCDPbchcfdc_clone.Plo
include ./$(DEPDIR)/QCDPbdhcfcc.Plo
include ./$(DEPDIR)/QCDPbdhcfdc.Plo
include ./$(DEPDIR)/QCD_procs_test.Po
include ./$(DEPDIR)/QCDcc_test.Po
include ./$(DEPDIR)/QCDdc_test.Po
include ./$(DEPDIR)/QEDPbKsdh.Plo
include ./$(DEPDIR)/QEDPbch.Plo
include ./$(DEPDIR)/QEDPbdh.Plo
include ./$(DEPDIR)/QEDPbpsdh.Plo
include ./$(DEPDIR)/QEDWbKsdh.Plo
include ./$(DEPDIR)/QEDWbch.Plo
include ./$(DEPDIR)/QEDWbdh.Plo
include ./$(DEPDIR)/QEDWbpsdh.Plo
include ./$(DEPDIR)/QEDch_test.Po
include ./$(DEPDIR)/QEDdh_test.Po
include ./$(DEPDIR)/SMPbKsch.Plo
include ./$(DEPDIR)/SMWbhsch.Plo
include ./$(DEPDIR)/SM_params_test.Po
include ./$(DEPDIR)/SM_test.Po
include ./$(DEPDIR)/Weyl_basis_test.Po
include ./$(DEPDIR)/Weyl_spinor_test.Po
include ./$(DEPDIR)/bitstring_test.Po
include ./$(DEPDIR)/cont_cols_test.Po
include ./$(DEPDIR)/discr_cols_test.Po
include ./$(DEPDIR)/m_spinor_test.Po
include ./$(DEPDIR)/parni_test.Po
include ./$(DEPDIR)/phi34_graphs_test.Po
include ./$(DEPDIR)/phi3_graphs_test.Po
include ./$(DEPDIR)/ps_reverse_test.Po
include ./$(DEPDIR)/ps_tree_test.Po
include ./$(DEPDIR)/ps_vars_test.Po
include ./$(DEPDIR)/pstree_shat_test.Po
include ./$(DEPDIR)/s_int_test.Po
include ./$(DEPDIR)/save_load_test.Po
include ./$(DEPDIR)/speed_test.Po
include ./$(DEPDIR)/susy_Kunszt_test.Po
include ./$(DEPDIR)/susy_QCDPbchabcc.Plo
include ./$(DEPDIR)/susy_QCDPbchcfcc.Plo
include ./$(DEPDIR)/susy_QCDPbchcfdc.Plo
include ./$(DEPDIR)/susy_QCDPbdhcfcc.Plo
include ./$(DEPDIR)/susy_QCDcc_test.Po
include ./$(DEPDIR)/susy_QCDdc_test.Po
include ./$(DEPDIR)/susy_QEDWb.Plo
include ./$(DEPDIR)/susy_QED_test.Po

.cpp.o:
	$(AM_V_CXX)$(CXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
	$(AM_V_at)$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	$(AM_V_CXX)source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXXCOMPILE) -c -o $@ $<

.cpp.obj:
	$(AM_V_CXX)$(CXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ `$(CYGPATH_W) '$<'`
	$(AM_V_at)$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	$(AM_V_CXX)source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXXCOMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

.cpp.lo:
	$(AM_V_CXX)$(LTCXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
	$(AM_V_at)$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Plo
#	$(AM_V_CXX)source='$<' object='$@' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LTCXXCOMPILE) -c -o $@ $<

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs

ID: $(am__tagged_files)
	$(am__define_uniq_tagged_files); mkid -fID $$unique
tags: tags-am
TAGS: tags

tags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	set x; \
	here=`pwd`; \
	$(am__define_uniq_tagged_files); \
	shift; \
	if test -z "$(ETAGS_ARGS)$$*$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  if test $$# -gt 0; then \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      "$$@" $$unique; \
	  else \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      $$unique; \
	  fi; \
	fi
ctags: ctags-am

CTAGS: ctags
ctags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	$(am__define_uniq_tagged_files); \
	test -z "$(CTAGS_ARGS)$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && $(am__cd) $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) "$$here"
cscopelist: cscopelist-am

cscopelist-am: $(am__tagged_files)
	list='$(am__tagged_files)'; \
	case "$(srcdir)" in \
	  [\\/]* | ?:[\\/]*) sdir="$(srcdir)" ;; \
	  *) sdir=$(subdir)/$(srcdir) ;; \
	esac; \
	for i in $$list; do \
	  if test -f "$$i"; then \
	    echo "$(subdir)/$$i"; \
	  else \
	    echo "$$sdir/$$i"; \
	  fi; \
	done >> $(top_builddir)/cscope.files

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

# Recover from deleted '.trs' file; this should ensure that
# "rm -f foo.log; make foo.trs" re-run 'foo.test', and re-create
# both 'foo.log' and 'foo.trs'.  Break the recipe in two subshells
# to avoid problems with "make -n".
.log.trs:
	rm -f $< $@
	$(MAKE) $(AM_MAKEFLAGS) $<

# Leading 'am--fnord' is there to ensure the list of targets does not
# expand to empty, as could happen e.g. with make check TESTS=''.
am--fnord $(TEST_LOGS) $(TEST_LOGS:.log=.trs): $(am__force_recheck)
am--force-recheck:
	@:

$(TEST_SUITE_LOG): $(TEST_LOGS)
	@$(am__set_TESTS_bases); \
	am__f_ok () { test -f "$$1" && test -r "$$1"; }; \
	redo_bases=`for i in $$bases; do \
	              am__f_ok $$i.trs && am__f_ok $$i.log || echo $$i; \
	            done`; \
	if test -n "$$redo_bases"; then \
	  redo_logs=`for i in $$redo_bases; do echo $$i.log; done`; \
	  redo_results=`for i in $$redo_bases; do echo $$i.trs; done`; \
	  if $(am__make_dryrun); then :; else \
	    rm -f $$redo_logs && rm -f $$redo_results || exit 1; \
	  fi; \
	fi; \
	if test -n "$$am__remaking_logs"; then \
	  echo "fatal: making $(TEST_SUITE_LOG): possible infinite" \
	       "recursion detected" >&2; \
	else \
	  am__remaking_logs=yes $(MAKE) $(AM_MAKEFLAGS) $$redo_logs; \
	fi; \
	if $(am__make_dryrun); then :; else \
	  st=0;  \
	  errmsg="fatal: making $(TEST_SUITE_LOG): failed to create"; \
	  for i in $$redo_bases; do \
	    test -f $$i.trs && test -r $$i.trs \
	      || { echo "$$errmsg $$i.trs" >&2; st=1; }; \
	    test -f $$i.log && test -r $$i.log \
	      || { echo "$$errmsg $$i.log" >&2; st=1; }; \
	  done; \
	  test $$st -eq 0 || exit 1; \
	fi
	@$(am__sh_e_setup); $(am__tty_colors); $(am__set_TESTS_bases); \
	ws='[ 	]'; \
	results=`for b in $$bases; do echo $$b.trs; done`; \
	test -n "$$results" || results=/dev/null; \
	all=`  grep "^$$ws*:test-result:"           $$results | wc -l`; \
	pass=` grep "^$$ws*:test-result:$$ws*PASS"  $$results | wc -l`; \
	fail=` grep "^$$ws*:test-result:$$ws*FAIL"  $$results | wc -l`; \
	skip=` grep "^$$ws*:test-result:$$ws*SKIP"  $$results | wc -l`; \
	xfail=`grep "^$$ws*:test-result:$$ws*XFAIL" $$results | wc -l`; \
	xpass=`grep "^$$ws*:test-result:$$ws*XPASS" $$results | wc -l`; \
	error=`grep "^$$ws*:test-result:$$ws*ERROR" $$results | wc -l`; \
	if test `expr $$fail + $$xpass + $$error` -eq 0; then \
	  success=true; \
	else \
	  success=false; \
	fi; \
	br='==================='; br=$$br$$br$$br$$br; \
	result_count () \
	{ \
	    if test x"$$1" = x"--maybe-color"; then \
	      maybe_colorize=yes; \
	    elif test x"$$1" = x"--no-color"; then \
	      maybe_colorize=no; \
	    else \
	      echo "$@: invalid 'result_count' usage" >&2; exit 4; \
	    fi; \
	    shift; \
	    desc=$$1 count=$$2; \
	    if test $$maybe_colorize = yes && test $$count -gt 0; then \
	      color_start=$$3 color_end=$$std; \
	    else \
	      color_start= color_end=; \
	    fi; \
	    echo "$${color_start}# $$desc $$count$${color_end}"; \
	}; \
	create_testsuite_report () \
	{ \
	  result_count $$1 "TOTAL:" $$all   "$$brg"; \
	  result_count $$1 "PASS: " $$pass  "$$grn"; \
	  result_count $$1 "SKIP: " $$skip  "$$blu"; \
	  result_count $$1 "XFAIL:" $$xfail "$$lgn"; \
	  result_count $$1 "FAIL: " $$fail  "$$red"; \
	  result_count $$1 "XPASS:" $$xpass "$$red"; \
	  result_count $$1 "ERROR:" $$error "$$mgn"; \
	}; \
	{								\
	  echo "$(PACKAGE_STRING): $(subdir)/$(TEST_SUITE_LOG)" |	\
	    $(am__rst_title);						\
	  create_testsuite_report --no-color;				\
	  echo;								\
	  echo ".. contents:: :depth: 2";				\
	  echo;								\
	  for b in $$bases; do echo $$b; done				\
	    | $(am__create_global_log);					\
	} >$(TEST_SUITE_LOG).tmp || exit 1;				\
	mv $(TEST_SUITE_LOG).tmp $(TEST_SUITE_LOG);			\
	if $$success; then						\
	  col="$$grn";							\
	 else								\
	  col="$$red";							\
	  test x"$$VERBOSE" = x || cat $(TEST_SUITE_LOG);		\
	fi;								\
	echo "$${col}$$br$${std}"; 					\
	echo "$${col}Testsuite summary for $(PACKAGE_STRING)$${std}";	\
	echo "$${col}$$br$${std}"; 					\
	create_testsuite_report --maybe-color;				\
	echo "$$col$$br$$std";						\
	if $$success; then :; else					\
	  echo "$${col}See $(subdir)/$(TEST_SUITE_LOG)$${std}";		\
	  if test -n "$(PACKAGE_BUGREPORT)"; then			\
	    echo "$${col}Please report to $(PACKAGE_BUGREPORT)$${std}";	\
	  fi;								\
	  echo "$$col$$br$$std";					\
	fi;								\
	$$success || exit 1

check-TESTS:
	@list='$(RECHECK_LOGS)';           test -z "$$list" || rm -f $$list
	@list='$(RECHECK_LOGS:.log=.trs)'; test -z "$$list" || rm -f $$list
	@test -z "$(TEST_SUITE_LOG)" || rm -f $(TEST_SUITE_LOG)
	@set +e; $(am__set_TESTS_bases); \
	log_list=`for i in $$bases; do echo $$i.log; done`; \
	trs_list=`for i in $$bases; do echo $$i.trs; done`; \
	log_list=`echo $$log_list`; trs_list=`echo $$trs_list`; \
	$(MAKE) $(AM_MAKEFLAGS) $(TEST_SUITE_LOG) TEST_LOGS="$$log_list"; \
	exit $$?;
recheck: all $(check_LTLIBRARIES) $(check_PROGRAMS) $(check_HEADERS)
	@test -z "$(TEST_SUITE_LOG)" || rm -f $(TEST_SUITE_LOG)
	@set +e; $(am__set_TESTS_bases); \
	bases=`for i in $$bases; do echo $$i; done \
	         | $(am__list_recheck_tests)` || exit 1; \
	log_list=`for i in $$bases; do echo $$i.log; done`; \
	log_list=`echo $$log_list`; \
	$(MAKE) $(AM_MAKEFLAGS) $(TEST_SUITE_LOG) \
	        am__force_recheck=am--force-recheck \
	        TEST_LOGS="$$log_list"; \
	exit $$?
bitstring_test.log: bitstring_test$(EXEEXT)
	@p='bitstring_test$(EXEEXT)'; \
	b='bitstring_test'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
phi3_graphs_test.log: phi3_graphs_test$(EXEEXT)
	@p='phi3_graphs_test$(EXEEXT)'; \
	b='phi3_graphs_test'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
phi34_graphs_test.log: phi34_graphs_test$(EXEEXT)
	@p='phi34_graphs_test$(EXEEXT)'; \
	b='phi34_graphs_test'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
QCD_procs_test.log: QCD_procs_test$(EXEEXT)
	@p='QCD_procs_test$(EXEEXT)'; \
	b='QCD_procs_test'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
Pauli_basis_test.log: Pauli_basis_test$(EXEEXT)
	@p='Pauli_basis_test$(EXEEXT)'; \
	b='Pauli_basis_test'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
Weyl_basis_test.log: Weyl_basis_test$(EXEEXT)
	@p='Weyl_basis_test$(EXEEXT)'; \
	b='Weyl_basis_test'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
m_spinor_test.log: m_spinor_test$(EXEEXT)
	@p='m_spinor_test$(EXEEXT)'; \
	b='m_spinor_test'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
Pauli_spinor_test.log: Pauli_spinor_test$(EXEEXT)
	@p='Pauli_spinor_test$(EXEEXT)'; \
	b='Pauli_spinor_test'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
Weyl_spinor_test.log: Weyl_spinor_test$(EXEEXT)
	@p='Weyl_spinor_test$(EXEEXT)'; \
	b='Weyl_spinor_test'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
discr_cols_test.log: discr_cols_test$(EXEEXT)
	@p='discr_cols_test$(EXEEXT)'; \
	b='discr_cols_test'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
cont_cols_test.log: cont_cols_test$(EXEEXT)
	@p='cont_cols_test$(EXEEXT)'; \
	b='cont_cols_test'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
QEDch_test.log: QEDch_test$(EXEEXT)
	@p='QEDch_test$(EXEEXT)'; \
	b='QEDch_test'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
QEDdh_test.log: QEDdh_test$(EXEEXT)
	@p='QEDdh_test$(EXEEXT)'; \
	b='QEDdh_test'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
QCDcc_test.log: QCDcc_test$(EXEEXT)
	@p='QCDcc_test$(EXEEXT)'; \
	b='QCDcc_test'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
QCDdc_test.log: QCDdc_test$(EXEEXT)
	@p='QCDdc_test$(EXEEXT)'; \
	b='QCDdc_test'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
Parke_Taylor_cc_test.log: Parke_Taylor_cc_test$(EXEEXT)
	@p='Parke_Taylor_cc_test$(EXEEXT)'; \
	b='Parke_Taylor_cc_test'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
Parke_Taylor_dc_test.log: Parke_Taylor_dc_test$(EXEEXT)
	@p='Parke_Taylor_dc_test$(EXEEXT)'; \
	b='Parke_Taylor_dc_test'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
SM_test.log: SM_test$(EXEEXT)
	@p='SM_test$(EXEEXT)'; \
	b='SM_test'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
SM_params_test.log: SM_params_test$(EXEEXT)
	@p='SM_params_test$(EXEEXT)'; \
	b='SM_params_test'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
susy_QED_test.log: susy_QED_test$(EXEEXT)
	@p='susy_QED_test$(EXEEXT)'; \
	b='susy_QED_test'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
susy_QCDcc_test.log: susy_QCDcc_test$(EXEEXT)
	@p='susy_QCDcc_test$(EXEEXT)'; \
	b='susy_QCDcc_test'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
susy_QCDdc_test.log: susy_QCDdc_test$(EXEEXT)
	@p='susy_QCDdc_test$(EXEEXT)'; \
	b='susy_QCDdc_test'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
susy_Kunszt_test.log: susy_Kunszt_test$(EXEEXT)
	@p='susy_Kunszt_test$(EXEEXT)'; \
	b='susy_Kunszt_test'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
MC_hel_test.log: MC_hel_test$(EXEEXT)
	@p='MC_hel_test$(EXEEXT)'; \
	b='MC_hel_test'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
MC_col_test.log: MC_col_test$(EXEEXT)
	@p='MC_col_test$(EXEEXT)'; \
	b='MC_col_test'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
MC_gen_test.log: MC_gen_test$(EXEEXT)
	@p='MC_gen_test$(EXEEXT)'; \
	b='MC_gen_test'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
s_int_test.log: s_int_test$(EXEEXT)
	@p='s_int_test$(EXEEXT)'; \
	b='s_int_test'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
ps_tree_test.log: ps_tree_test$(EXEEXT)
	@p='ps_tree_test$(EXEEXT)'; \
	b='ps_tree_test'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
ps_reverse_test.log: ps_reverse_test$(EXEEXT)
	@p='ps_reverse_test$(EXEEXT)'; \
	b='ps_reverse_test'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
pstree_shat_test.log: pstree_shat_test$(EXEEXT)
	@p='pstree_shat_test$(EXEEXT)'; \
	b='pstree_shat_test'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
parni_test.log: parni_test$(EXEEXT)
	@p='parni_test$(EXEEXT)'; \
	b='parni_test'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
LHAPDF_test.log: LHAPDF_test$(EXEEXT)
	@p='LHAPDF_test$(EXEEXT)'; \
	b='LHAPDF_test'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
ps_vars_test.log: ps_vars_test$(EXEEXT)
	@p='ps_vars_test$(EXEEXT)'; \
	b='ps_vars_test'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
save_load_test.log: save_load_test$(EXEEXT)
	@p='save_load_test$(EXEEXT)'; \
	b='save_load_test'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
speed_test.log: speed_test$(EXEEXT)
	@p='speed_test$(EXEEXT)'; \
	b='speed_test'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
.test.log:
	@p='$<'; \
	$(am__set_b); \
	$(am__check_pre) $(TEST_LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_TEST_LOG_DRIVER_FLAGS) $(TEST_LOG_DRIVER_FLAGS) -- $(TEST_LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
#.test$(EXEEXT).log:
#	@p='$<'; \
#	$(am__set_b); \
#	$(am__check_pre) $(TEST_LOG_DRIVER) --test-name "$$f" \
#	--log-file $$b.log --trs-file $$b.trs \
#	$(am__common_driver_flags) $(AM_TEST_LOG_DRIVER_FLAGS) $(TEST_LOG_DRIVER_FLAGS) -- $(TEST_LOG_COMPILE) \
#	"$$tst" $(AM_TESTS_FD_REDIRECT)

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d "$(distdir)/$$file"; then \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -fpR $(srcdir)/$$file "$(distdir)$$dir" || exit 1; \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    cp -fpR $$d/$$file "$(distdir)$$dir" || exit 1; \
	  else \
	    test -f "$(distdir)/$$file" \
	    || cp -p $$d/$$file "$(distdir)/$$file" \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
	$(MAKE) $(AM_MAKEFLAGS) $(check_LTLIBRARIES) $(check_PROGRAMS) \
	  $(check_HEADERS)
	$(MAKE) $(AM_MAKEFLAGS) check-TESTS
check: check-am
all-am: Makefile
installdirs:
install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	if test -z '$(STRIP)'; then \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	      install; \
	else \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	    "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'" install; \
	fi
mostlyclean-generic:
	-test -z "$(TEST_LOGS)" || rm -f $(TEST_LOGS)
	-test -z "$(TEST_LOGS:.log=.trs)" || rm -f $(TEST_LOGS:.log=.trs)
	-test -z "$(TEST_SUITE_LOG)" || rm -f $(TEST_SUITE_LOG)

clean-generic:
	-test -z "$(CLEANFILES)" || rm -f $(CLEANFILES)

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
	-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-am

clean-am: clean-checkLTLIBRARIES clean-checkPROGRAMS clean-generic \
	clean-libtool mostlyclean-am

distclean: distclean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

html-am:

info: info-am

info-am:

install-data-am:

install-dvi: install-dvi-am

install-dvi-am:

install-exec-am:

install-html: install-html-am

install-html-am:

install-info: install-info-am

install-info-am:

install-man:

install-pdf: install-pdf-am

install-pdf-am:

install-ps: install-ps-am

install-ps-am:

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am:

.MAKE: check-am install-am install-strip

.PHONY: CTAGS GTAGS TAGS all all-am check check-TESTS check-am clean \
	clean-checkLTLIBRARIES clean-checkPROGRAMS clean-generic \
	clean-libtool cscopelist-am ctags ctags-am distclean \
	distclean-compile distclean-generic distclean-libtool \
	distclean-tags distdir dvi dvi-am html html-am info info-am \
	install install-am install-data install-data-am install-dvi \
	install-dvi-am install-exec install-exec-am install-html \
	install-html-am install-info install-info-am install-man \
	install-pdf install-pdf-am install-ps install-ps-am \
	install-strip installcheck installcheck-am installdirs \
	maintainer-clean maintainer-clean-generic mostlyclean \
	mostlyclean-compile mostlyclean-generic mostlyclean-libtool \
	pdf pdf-am ps ps-am recheck tags tags-am uninstall \
	uninstall-am


# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
